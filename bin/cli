#!/usr/bin/env node
const argv = require('minimisty');
const colors = require('colors');
const fs = require('fs');
const { DeviceResponseVerifier } = require('../lib');

const deviceResponseVerifier = new DeviceResponseVerifier();

const statusColor = {
  PASSED: 'green',
  FAILED: 'red',
  WARNING: 'yellow',
};

(async () => {
  try {
    const deviceResponse = fs.readFileSync(argv['device-response']);
    const encodedSessionTranscript = fs.readFileSync(argv['session-transcript']);
    const ephemeralReaderKey = fs.readFileSync(argv['ephemeral-reader-key']);
    let isValid = true;
    const onCheck = (verification) => {
      isValid = isValid && verification.status !== 'FAILED';
      const color = statusColor[verification.status];
      console.log(colors[color](verification.reason ?? verification.check));
    };
    await deviceResponseVerifier.verify(deviceResponse, {
      encodedSessionTranscript,
      ephemeralReaderKey,
      onCheck,
    });
    console.log(colors[isValid ? 'green' : 'red'](`Device response is ${isValid ? 'valid' : 'invalid'}`));
  } catch (err) {
    console.log('Error: ', err.message);
  }
})();
