// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parse DeviceResponse Example 1 parse should decoded protected headers 1`] = `
Map {
  1 => -7,
  4 => {
    "data": [
      100,
      101,
      109,
      111,
      45,
      107,
      105,
      100,
    ],
    "type": "Buffer",
  },
  33 => {
    "data": [
      48,
      130,
      2,
      8,
      48,
      130,
      1,
      175,
      160,
      3,
      2,
      1,
      2,
      2,
      20,
      59,
      198,
      143,
      46,
      104,
      15,
      146,
      151,
      95,
      37,
      160,
      125,
      4,
      22,
      111,
      115,
      125,
      36,
      206,
      204,
      48,
      10,
      6,
      8,
      42,
      134,
      72,
      206,
      61,
      4,
      3,
      2,
      48,
      100,
      49,
      11,
      48,
      9,
      6,
      3,
      85,
      4,
      6,
      19,
      2,
      85,
      83,
      49,
      19,
      48,
      17,
      6,
      3,
      85,
      4,
      8,
      12,
      10,
      67,
      97,
      108,
      105,
      102,
      111,
      114,
      110,
      105,
      97,
      49,
      22,
      48,
      20,
      6,
      3,
      85,
      4,
      7,
      12,
      13,
      83,
      97,
      110,
      32,
      70,
      114,
      97,
      110,
      99,
      105,
      115,
      99,
      111,
      49,
      19,
      48,
      17,
      6,
      3,
      85,
      4,
      10,
      12,
      10,
      77,
      121,
      32,
      67,
      111,
      109,
      112,
      97,
      110,
      121,
      49,
      19,
      48,
      17,
      6,
      3,
      85,
      4,
      3,
      12,
      10,
      109,
      121,
      115,
      105,
      116,
      101,
      46,
      99,
      111,
      109,
      48,
      30,
      23,
      13,
      50,
      51,
      48,
      56,
      51,
      48,
      49,
      53,
      53,
      55,
      52,
      52,
      90,
      23,
      13,
      50,
      51,
      48,
      57,
      48,
      57,
      49,
      53,
      53,
      55,
      52,
      52,
      90,
      48,
      100,
      49,
      11,
      48,
      9,
      6,
      3,
      85,
      4,
      6,
      19,
      2,
      85,
      83,
      49,
      19,
      48,
      17,
      6,
      3,
      85,
      4,
      8,
      12,
      10,
      67,
      97,
      108,
      105,
      102,
      111,
      114,
      110,
      105,
      97,
      49,
      22,
      48,
      20,
      6,
      3,
      85,
      4,
      7,
      12,
      13,
      83,
      97,
      110,
      32,
      70,
      114,
      97,
      110,
      99,
      105,
      115,
      99,
      111,
      49,
      19,
      48,
      17,
      6,
      3,
      85,
      4,
      10,
      12,
      10,
      77,
      121,
      32,
      67,
      111,
      109,
      112,
      97,
      110,
      121,
      49,
      19,
      48,
      17,
      6,
      3,
      85,
      4,
      3,
      12,
      10,
      109,
      121,
      115,
      105,
      116,
      101,
      46,
      99,
      111,
      109,
      48,
      89,
      48,
      19,
      6,
      7,
      42,
      134,
      72,
      206,
      61,
      2,
      1,
      6,
      8,
      42,
      134,
      72,
      206,
      61,
      3,
      1,
      7,
      3,
      66,
      0,
      4,
      30,
      55,
      138,
      207,
      100,
      204,
      201,
      149,
      62,
      147,
      42,
      28,
      89,
      150,
      132,
      208,
      220,
      198,
      223,
      221,
      187,
      6,
      218,
      196,
      137,
      7,
      71,
      60,
      244,
      50,
      234,
      80,
      12,
      91,
      58,
      47,
      93,
      248,
      218,
      54,
      101,
      188,
      14,
      235,
      173,
      165,
      228,
      214,
      74,
      39,
      97,
      210,
      221,
      136,
      195,
      103,
      40,
      94,
      8,
      141,
      226,
      39,
      14,
      116,
      163,
      63,
      48,
      61,
      48,
      59,
      6,
      3,
      85,
      29,
      17,
      4,
      52,
      48,
      50,
      134,
      48,
      104,
      116,
      116,
      112,
      115,
      58,
      47,
      47,
      99,
      114,
      101,
      100,
      101,
      110,
      116,
      105,
      97,
      108,
      45,
      105,
      115,
      115,
      117,
      101,
      114,
      46,
      111,
      105,
      100,
      99,
      45,
      102,
      101,
      100,
      101,
      114,
      97,
      116,
      105,
      111,
      110,
      46,
      111,
      110,
      108,
      105,
      110,
      101,
      48,
      10,
      6,
      8,
      42,
      134,
      72,
      206,
      61,
      4,
      3,
      2,
      3,
      71,
      0,
      48,
      68,
      2,
      32,
      84,
      235,
      59,
      6,
      18,
      51,
      216,
      78,
      135,
      42,
      188,
      143,
      181,
      163,
      57,
      61,
      193,
      134,
      149,
      183,
      126,
      227,
      179,
      91,
      98,
      148,
      104,
      125,
      247,
      6,
      229,
      90,
      2,
      32,
      63,
      233,
      114,
      55,
      0,
      212,
      153,
      153,
      230,
      169,
      241,
      93,
      77,
      225,
      28,
      242,
      79,
      25,
      6,
      118,
      86,
      220,
      55,
      117,
      253,
      216,
      168,
      114,
      4,
      130,
      28,
      251,
    ],
    "type": "Buffer",
  },
}
`;

exports[`parse DeviceResponse Example 1 parse should match the snapshot 1`] = `
MDoc {
  "documents": [
    Document {
      "docType": "eu.europa.ec.eudiw.pid.1",
    },
  ],
  "status": 0,
  "version": "1.0",
}
`;
